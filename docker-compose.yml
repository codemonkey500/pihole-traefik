version: '3.7'

services:
  pihole:
    image: pihole/pihole:2022.11
    container_name: pihole
    environment:
      TZ: ${TIMEZONE}
      WEBPASSWORD: ${WEBPASSWORD}
      FTLCONF_LOCAL_IPV4: ${PIHOLE_HOST_IP}
      FTLCONF_LOCAL_IPV6: ${PIHOLE_HOST_IPV6}
      PIHOLE_DNS_: '1.1.1.1;8.8.8.8'
      IPv6: 'false'
      TEMPERATUREUNIT: c
      WEBTHEME: 'default-dark'
      DNSMASQ_LISTENING: 'all'
      REV_SERVER: 'true' # Used for conditional forwarding
      REV_SERVER_TARGET: ${PIHOLE_ROUTER_IP}
      REV_SERVER_CIDR: ${PIHOLE_REVERSE_DNS}
    dns:
      - 127.0.0.1 # "Sets your container's resolve settings to localhost so it can resolve DHCP hostnames [...]" - github.com/pi-hole/docker-pi-hole
      - 1.1.1.1 # Backup server
    volumes:
      - pihole:/etc/pihole
      - dnsmasq:/etc/dnsmasq.d
    ports:
      - '53:53/tcp'
      - '53:53/udp'
    labels:
    # Router
      - "traefik.enable=true"
      - "traefik.http.routers.pihole.rule=Host(`${BIND_IP}`)"
      - "traefik.http.routers.pihole.entrypoints=web"
      - "traefik.http.services.pihole.loadbalancer.server.port=80"
      # Middleware
      - "traefik.http.routers.pihole.middlewares=pihole-whitelist@docker"
      - 'traefik.http.middlewares.pihole-whitelist.ipwhitelist.sourcerange=10.200.0.0/24'
    extra_hosts:
      - "camera.home.lan:10.200.0.2"
    restart: unless-stopped
    networks:
      - web

  traefik:
    image: traefik:v2.9.6
    container_name: traefik
    command:
      #- '--api.insecure=true' # Used to enable traefik dashboard
      - '--providers.docker=true'
      - '--providers.docker.exposedbydefault=false'
      - '--entrypoints.web.address=:80'
      - '--log.level=DEBUG'
      - '--accesslog=true'
      - '--accessLog.filePath=/var/log/traefik/access.log'
      - '--accessLog.format=json'
    ports:
      - '${BIND_IP}:80:80/tcp'
      - '${BIND_IP}:443:443/tcp'
      #- '${BIND_IP}:8080:8080/tcp' # The Web UI (enabled by --api.insecure=true)
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
    networks:
      - web
      
networks:
  web:
    # docker network create web
    external: true

volumes:
  pihole:
  dnsmasq: